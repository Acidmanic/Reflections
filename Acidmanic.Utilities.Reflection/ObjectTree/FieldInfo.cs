using System;
using System.Linq;
using System.Reflection;
using Acidmanic.Utilities.Reflection.Attributes;

namespace Acidmanic.Utilities.Reflection.ObjectTree
{
    /// <summary>
    /// Methods of this class are useful to retrieve meta information given to properties of a class/model
    /// </summary>
    public static class FieldInfo
    {
        /// <summary>
        /// Checks for presence of <code>UniqueMember</code> attribute
        /// </summary>
        /// <param name="property">The field property to be checked</param>
        /// <returns>True if attribute has been found</returns>
        public static bool IsUnique(PropertyInfo property)
        {
            return Is<UniqueMemberAttribute>(property);
        }

        /// <summary>
        /// Checks for presence of <code>UniqueMember</code> attribute
        /// </summary>
        /// <param name="property">The field property to be checked</param>
        /// <returns>True if attribute has been found</returns>
        public static bool IsAutogenerated(PropertyInfo property)
        {
            return Is<AutoValuedMemberAttribute>(property);
        }

        private static bool Is<TAttribute>(PropertyInfo property)
            where TAttribute : Attribute
        {
            if (property == null)
            {
                return false;
            }

            var attributes = property.GetCustomAttributes<TAttribute>();

            return attributes.Any();
        }
    }
}